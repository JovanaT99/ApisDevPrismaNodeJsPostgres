generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Course {
  id           Int         @id @default(autoincrement())
  title        String
  desc         String
  durration    Float
  createdAt    DateTime    @default(now())
  videos       Video[]
  Instructor   Instructor? @relation(fields: [instructorId], references: [id])
  instructorId Int?
}

model Video {
  id           Int           @id @default(autoincrement())
  title        String
  desc         String
  Course       Course?       @relation(fields: [courseId], references: [id])
  courseId     Int?
  videoDetails VideoDetails?
}

model VideoDetails {
  id              Int     @id @default(autoincrement())
  key             String?
  metaData        String?
  url             String
  hostingProvider String
  video           Video?  @relation(fields: [videoId], references: [id])
  videoId         Int?    @unique
}

model Instructor {
  id      Int      @id @default(autoincrement())
  name    String
  zip     String
  country String
  city    String
  courses Course[]
  user    User?    @relation(fields: [userId], references: [id])
  userId  Int?     @unique
}

model User {
  id         Int         @id @default(autoincrement())
  email      String      @unique
  password   String
  instructor Instructor?
}

model Customer {
id Int  @id     @default(autoincrement())
name    String
email      String      @unique
address Adddress? @relation(fields: [addressId],references: [id])
application Application[]
addressId Int? @unique


}

model Adddress {
  id Int  @id     @default(autoincrement())
  zip     String
  city    String
  country String
  Customer Customer?


}
enum APPLICATION_TYPE{
  LOAN
  CAR_FINANCING
  BUSINESS_FINANCING
}

model Application{
  id Int  @id     @default(autoincrement())
  type APPLICATION_TYPE
  tenure String
  amount Int
  Customer Customer? @relation(fields: [customerId],references: [id])
  customerId Int?

}